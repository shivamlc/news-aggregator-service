spring:
  application:
    name: news-aggregator-service
  output:
    ansi:
      enabled: always # enables ANSI colors in the console output; logging will use colors in the console
  config:
    import:
    - classpath:application-${spring.profiles.active}.yml # imports the profile-specific configuration file based on the active profile
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:DEV}

  datasource:
    url: jdbc:h2:mem:defaultdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # H2 in-memory database with UTC timezone
    username: user
    password: pass
    driver-class-name: org.h2.Driver
  
  jackson:
    time-zone: UTC # Jackson JSON serialization timezone

  h2:
    console:
      enabled: true # enables H2 console for database management
      path: /news-aggregator-h2-console # path to access the H2 console

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true # enables SQL logging
    hibernate:
      ddl-auto: create-drop # automatically creates and drops the database schema
    properties:
      hibernate:
        jdbc:
          time-zone: UTC # Set default timezone for the entire application

server:
  port: 8081


logging:
  level:
    root: INFO # logging level for the spring framework and the libraries it uses

  pattern:
    console: "%d{ISO8601} [%thread] %highlight(%-5level) %class{36}.%method:%line %logger{36} - %msg%n" # pattern for the console logging

# by default, the application will send heartbeat to the Eureka server every 30 seconds
eureka:
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost} # hostname for the Eureka server instance; its localhost for local system
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${EUREKA_SERVER_PORT:8070}/eureka/


info:
  app:
    name: news-aggregator-service
    description: A service to store news from various sources
    version: 1.0.0

# actuator configuration
management: 
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    shutdown:
      access: unrestricted # enables the shutdown endpoint to gracefully stop the application
    #   to shut down the application, you can use the following command:
    #   curl -X POST http://localhost:8081/actuator/shutdown
    # on shutdown, the application will stop gracefully and deregister from Eureka
  info:
    env:
      enabled: true # enables the env endpoint to expose environment variables



   